var search_data = {"index":{"searchIndex":["actor","actorcontroller","actorhelper","actortype","actortypecontroller","actortypehelper","admin","ajaxcontroller","applicationcontroller","applicationhelper","blacklistscope","csvimport","csvfile","csvimportcontroller","devisemailer","homecontroller","homehelper","information","informationfielddate","informationfieldemail","informationfieldmultipleselect","informationfieldsingleselect","informationfieldtext","informationfieldtype","informationtype","informationtypecontroller","informationtypedecorator","informationtypehelper","invitationcontroller","login","loginshelper","object","registrationscontroller","relationship","relationshipcontroller","relationshiphelper","relationshiptype","relationshiptypecontroller","sgfm","application","scope","scoped","classmethods","scopescontroller","scopeshelper","user","whitelistscope","account_types()","actors()","add_information_type_form()","add_relationship_form()","add_row()","after_sign_in_path_for()","all_types()","bootstrap_class_for()","create()","create()","create()","create()","create()","create()","create()","create()","decorator_by_key()","default_url_options()","delete_csv_file()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","edit()","edit()","edit()","edit()","edit()","edit()","find_actor_by_id()","find_by_key()","find_by_key()","find_by_key()","find_by_key()","find_information_by_key()","find_relationship_by_key()","form()","form()","form()","form()","form()","get_partial()","get_value()","get_value()","get_value()","get_value()","get_value()","import()","included()","index()","information()","information_field_types()","information_type()","information_type_data_form()","information_type_option_form()","information_types()","information_types()","information_types_for_actor_type()","inherit_scope_from()","invitation()","invite()","is_admin?()","is_user?()","key()","list()","list()","list()","list()","list()","list_account_types()","list_actor_types()","list_csv_files()","list_elements_proper()","list_invited()","list_scope_types()","list_scopes()","list_uninvited()","method_missing()","name()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_csv_file()","new_import()","parse_data()","password_match?()","password_required?()","predefined_questions()","referenced_actor()","relationship_types()","remove_csv_file()","required?()","reset_all()","scope_array()","search()","searchable?()","send_invitation()","set_locale()","set_scope()","set_value()","set_value()","set_value()","set_value()","set_value()","show()","show()","show()","show()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","update()","update()","update()","update()","update()","update()","update()","update_corresponding_actors()","update_search_field()","update_to_string_field()","upload_csv_file()","user_type()","user_type()","value()","value=()","value_to_s()","visible?()","visible?()","visible?()","authors","gemfile","install","license","readme","rakefile","robots"],"longSearchIndex":["actor","actorcontroller","actorhelper","actortype","actortypecontroller","actortypehelper","admin","ajaxcontroller","applicationcontroller","applicationhelper","blacklistscope","csvimport","csvimport::csvfile","csvimportcontroller","devisemailer","homecontroller","homehelper","information","informationfielddate","informationfieldemail","informationfieldmultipleselect","informationfieldsingleselect","informationfieldtext","informationfieldtype","informationtype","informationtypecontroller","informationtypedecorator","informationtypehelper","invitationcontroller","login","loginshelper","object","registrationscontroller","relationship","relationshipcontroller","relationshiphelper","relationshiptype","relationshiptypecontroller","sgfm","sgfm::application","scope","scoped","scoped::classmethods","scopescontroller","scopeshelper","user","whitelistscope","login::account_types()","admin#actors()","ajaxcontroller#add_information_type_form()","ajaxcontroller#add_relationship_form()","csvimportcontroller#add_row()","applicationcontroller#after_sign_in_path_for()","scope::all_types()","applicationhelper#bootstrap_class_for()","actorcontroller#create()","actortypecontroller#create()","informationtypecontroller#create()","informationtypedecorator::create()","registrationscontroller#create()","relationshipcontroller#create()","relationshiptypecontroller#create()","scopescontroller#create()","actortype#decorator_by_key()","applicationcontroller#default_url_options()","csvimportcontroller#delete_csv_file()","actorcontroller#destroy()","actortypecontroller#destroy()","informationtypecontroller#destroy()","relationshipcontroller#destroy()","relationshiptypecontroller#destroy()","scopescontroller#destroy()","actorcontroller#edit()","actortypecontroller#edit()","informationtypecontroller#edit()","relationshipcontroller#edit()","relationshiptypecontroller#edit()","scopescontroller#edit()","actorhelper#find_actor_by_id()","actortype::find_by_key()","informationfieldtype::find_by_key()","informationtype::find_by_key()","relationshiptype::find_by_key()","actor#find_information_by_key()","actor#find_relationship_by_key()","informationfielddate#form()","informationfieldemail#form()","informationfieldmultipleselect#form()","informationfieldsingleselect#form()","informationfieldtext#form()","informationtypehelper::get_partial()","informationfielddate#get_value()","informationfieldemail#get_value()","informationfieldmultipleselect#get_value()","informationfieldsingleselect#get_value()","informationfieldtext#get_value()","csvimportcontroller#import()","scoped::included()","homecontroller#index()","csvimportcontroller#information()","informationtypehelper#information_field_types()","information#information_type()","ajaxcontroller#information_type_data_form()","ajaxcontroller#information_type_option_form()","actortype#information_types()","informationtypehelper#information_types()","actorcontroller#information_types_for_actor_type()","scoped::classmethods#inherit_scope_from()","devisemailer#invitation()","invitationcontroller#invite()","login#is_admin?()","login#is_user?()","relationship#key()","actorcontroller#list()","actortypecontroller#list()","informationtypecontroller#list()","relationshiptypecontroller#list()","scopescontroller#list()","scopeshelper#list_account_types()","actortypehelper#list_actor_types()","csvimportcontroller#list_csv_files()","scope#list_elements_proper()","invitationcontroller#list_invited()","scopeshelper#list_scope_types()","actorhelper#list_scopes()","invitationcontroller#list_uninvited()","informationtypedecorator#method_missing()","relationship#name()","actor::new()","actorcontroller#new()","actortypecontroller#new()","csvimport::csvfile::new()","information::new()","registrationscontroller#new()","relationship::new()","relationshipcontroller#new()","scopescontroller#new()","csvimportcontroller#new_csv_file()","csvimportcontroller#new_import()","informationtypehelper::parse_data()","user#password_match?()","user#password_required?()","ajaxcontroller#predefined_questions()","ajaxcontroller#referenced_actor()","relationshiphelper#relationship_types()","csvimport::csvfile#remove_csv_file()","information#required?()","applicationcontroller#reset_all()","scopeshelper#scope_array()","actorcontroller#search()","information#searchable?()","login#send_invitation()","applicationcontroller#set_locale()","scoped#set_scope()","informationfielddate#set_value()","informationfieldemail#set_value()","informationfieldmultipleselect#set_value()","informationfieldsingleselect#set_value()","informationfieldtext#set_value()","actorcontroller#show()","actortypecontroller#show()","informationtypecontroller#show()","relationshiptypecontroller#show()","actor#to_s()","actortype#to_s()","blacklistscope#to_s()","informationfielddate#to_s()","informationfieldemail#to_s()","informationfieldmultipleselect#to_s()","informationfieldsingleselect#to_s()","informationfieldtext#to_s()","relationship#to_s()","relationshiptype#to_s()","whitelistscope#to_s()","actorcontroller#update()","actortypecontroller#update()","informationtypecontroller#update()","registrationscontroller#update()","relationshipcontroller#update()","relationshiptypecontroller#update()","scopescontroller#update()","actortype#update_corresponding_actors()","actor#update_search_field()","actor#update_to_string_field()","csvimportcontroller#upload_csv_file()","admin#user_type()","user#user_type()","information#value()","information#value=()","information#value_to_s()","blacklistscope#visible?()","scoped#visible?()","whitelistscope#visible?()","","","","","","",""],"info":[["Actor","","Actor.html","","<p>An Actor consists of a list of references to Information objects and a\nreference to one specific ActorType …\n"],["ActorController","","ActorController.html","","<p>Controller for objects of class Actor. Mediates inputs and converts them to\ncommands for the model-class …\n"],["ActorHelper","","ActorHelper.html","",""],["ActorType","","ActorType.html","","<p>ActorTypes define which Information objects of which InformationType\nobjects an Actor with this ActorType …\n"],["ActorTypeController","","ActorTypeController.html","","<p>Controller for objects of class ActorType. Mediates inputs and converts\nthem to commands for the model-class …\n"],["ActorTypeHelper","","ActorTypeHelper.html","",""],["Admin","","Admin.html","","<p>See class Login for documentation.\n"],["AjaxController","","AjaxController.html","","<p>Controller for Ajax usages. Used to render partials that are needed when\nfilling in forms that change …\n"],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["BlacklistScope","","BlacklistScope.html","","<p>Extends Scope - represents a Blacklist: Every account_type in the list is\nNOT allowed to view.\n"],["CsvImport","","CsvImport.html","","<p>A CsvFile is a file of the format .csv that has been imported by an Admin.\nCsvFiles are used to import …\n"],["CsvImport::CsvFile","","CsvImport/CsvFile.html","",""],["CsvImportController","","CsvImportController.html","","<p>Controller for importing CsvFiles by an Admin.\n"],["DeviseMailer","","DeviseMailer.html","",""],["HomeController","","HomeController.html","","<p>Controller that directs client to correct view when trying to access index\npage of web application.\n"],["HomeHelper","","HomeHelper.html","",""],["Information","","Information.html","","<p>An Information is where exactly one piece of core data is stored. An\nInformation references its InformationType …\n"],["InformationFieldDate","","InformationFieldDate.html","","<p>Concrete class for date InformationFieldType objects. Not yet implemented.\n"],["InformationFieldEmail","","InformationFieldEmail.html","","<p>Concrete class for email InformationFieldType objects. Not yet implemented.\n"],["InformationFieldMultipleSelect","","InformationFieldMultipleSelect.html","","<p>Concrete class for multiple select InformationFieldType objects.\n"],["InformationFieldSingleSelect","","InformationFieldSingleSelect.html","","<p>Concrete class for single select InformationFieldType objects.\n"],["InformationFieldText","","InformationFieldText.html","","<p>Concrete class for text input InformationFieldType objects.\n"],["InformationFieldType","","InformationFieldType.html","","<p>Abstract class of what kind of input InformationType objects have. Extended\nby its concrete classes. …\n"],["InformationType","","InformationType.html","","<p>An InformationType is like an attribute. ActorType objects reference\nInformationType objects to declare …\n"],["InformationTypeController","","InformationTypeController.html","","<p>Controller for objects of class InformationType. Mediates inputs and\nconverts them to commands for the …\n"],["InformationTypeDecorator","","InformationTypeDecorator.html","","<p>Decorator class for InformationType. Contains further data an ActorType\nneeds from its InformationType …\n"],["InformationTypeHelper","","InformationTypeHelper.html","",""],["InvitationController","","InvitationController.html","","<p>Controller that takes care of inviting Users that own Actors which have\nbeen imported.. Mediates inputs …\n"],["Login","","Login.html","","<p>The Login model represents an abstract login. This is a container for\ndevise specific data. It is connected …\n"],["LoginsHelper","","LoginsHelper.html","",""],["Object","","Object.html","",""],["RegistrationsController","","RegistrationsController.html","","<p>Controller that takes care of register process for new Users. Mediates\ninputs and converts them to commands …\n"],["Relationship","","Relationship.html","","<p>A Relationship represents a relation between two Actor objects, with one\nactive Actor :actor that created …\n"],["RelationshipController","","RelationshipController.html","","<p>Controller for objects of class Relationship. Mediates inputs and converts\nthem to commands for the model-class …\n"],["RelationshipHelper","","RelationshipHelper.html","",""],["RelationshipType","","RelationshipType.html","","<p>RelationshipType objects are referenced by Relationship objects. A\nRelationshipType consists of a :name …\n"],["RelationshipTypeController","","RelationshipTypeController.html","","<p>Controller for objects of class RelationshipType. Mediates inputs and\nconverts them to commands for the …\n"],["SGfM","","SGfM.html","",""],["SGfM::Application","","SGfM/Application.html","",""],["Scope","","Scope.html","","<p>Represents a Scope - a Scope can be attributed to Information,\nRelationship, etc, objects. It describes …\n"],["Scoped","","Scoped.html","","<p>Scoped is a module that implements functionality of Scope. If a class\nincludes Scoped, each of its objects …\n"],["Scoped::ClassMethods","","Scoped/ClassMethods.html","",""],["ScopesController","","ScopesController.html","","<p>Controller for objects of class Scope. Mediates inputs and converts them to\ncommands for the model-class …\n"],["ScopesHelper","","ScopesHelper.html","",""],["User","","User.html","","<p>See class Login for documentation.\n"],["WhitelistScope","","WhitelistScope.html","","<p>Extends Scope - represents a Whitelist: Every account_type in the list is\nallowed to view.\n"],["account_types","Login","Login.html#method-c-account_types","()","<p>Returns all account types in a list\n"],["actors","Admin","Admin.html#method-i-actors","()",""],["add_information_type_form","AjaxController","AjaxController.html#method-i-add_information_type_form","()",""],["add_relationship_form","AjaxController","AjaxController.html#method-i-add_relationship_form","()",""],["add_row","CsvImportController","CsvImportController.html#method-i-add_row","()",""],["after_sign_in_path_for","ApplicationController","ApplicationController.html#method-i-after_sign_in_path_for","(login)",""],["all_types","Scope","Scope.html#method-c-all_types","()","<p>Returns all types of Scope in a list. (That means it returns the\nClass-Objects).\n"],["bootstrap_class_for","ApplicationHelper","ApplicationHelper.html#method-i-bootstrap_class_for","(flash_type)",""],["create","ActorController","ActorController.html#method-i-create","()","<p>Creates an Actor of chosen ActorType and with params as Information\nobjects.\n"],["create","ActorTypeController","ActorTypeController.html#method-i-create","()","<p>Creates an ActorType with chosen name and InformationType objects.\n"],["create","InformationTypeController","InformationTypeController.html#method-i-create","()","<p>Creates an InformationType with chosen name.\n"],["create","InformationTypeDecorator","InformationTypeDecorator.html#method-c-create","(info_type, actor_type, required, searchable)","<p>Creates a new InformationTypeDecorator object with arguments. param\n:info_type InformationType that need …\n"],["create","RegistrationsController","RegistrationsController.html#method-i-create","()",""],["create","RelationshipController","RelationshipController.html#method-i-create","()",""],["create","RelationshipTypeController","RelationshipTypeController.html#method-i-create","()",""],["create","ScopesController","ScopesController.html#method-i-create","()",""],["decorator_by_key","ActorType","ActorType.html#method-i-decorator_by_key","(key)","<p>Returns the InformationTypeDecorator that decorates the InformationType\nwith given key.\n"],["default_url_options","ApplicationController","ApplicationController.html#method-i-default_url_options","(options={})",""],["delete_csv_file","CsvImportController","CsvImportController.html#method-i-delete_csv_file","()",""],["destroy","ActorController","ActorController.html#method-i-destroy","()",""],["destroy","ActorTypeController","ActorTypeController.html#method-i-destroy","()",""],["destroy","InformationTypeController","InformationTypeController.html#method-i-destroy","()",""],["destroy","RelationshipController","RelationshipController.html#method-i-destroy","()",""],["destroy","RelationshipTypeController","RelationshipTypeController.html#method-i-destroy","()",""],["destroy","ScopesController","ScopesController.html#method-i-destroy","()",""],["edit","ActorController","ActorController.html#method-i-edit","()",""],["edit","ActorTypeController","ActorTypeController.html#method-i-edit","()",""],["edit","InformationTypeController","InformationTypeController.html#method-i-edit","()",""],["edit","RelationshipController","RelationshipController.html#method-i-edit","()",""],["edit","RelationshipTypeController","RelationshipTypeController.html#method-i-edit","()",""],["edit","ScopesController","ScopesController.html#method-i-edit","()",""],["find_actor_by_id","ActorHelper","ActorHelper.html#method-i-find_actor_by_id","(id)","<p>Finds Actor.\n"],["find_by_key","ActorType","ActorType.html#method-c-find_by_key","(key)","<p>validates_format_of :to_string_pattern, :with =&gt; /(|:.+|( )*)*/ Doesn’t\nseem to work. No idea why. …\n"],["find_by_key","InformationFieldType","InformationFieldType.html#method-c-find_by_key","(key)",""],["find_by_key","InformationType","InformationType.html#method-c-find_by_key","(key)",""],["find_by_key","RelationshipType","RelationshipType.html#method-c-find_by_key","(key)",""],["find_information_by_key","Actor","Actor.html#method-i-find_information_by_key","(key)",""],["find_relationship_by_key","Actor","Actor.html#method-i-find_relationship_by_key","(key)",""],["form","InformationFieldDate","InformationFieldDate.html#method-i-form","(form_helper, key, options = {})",""],["form","InformationFieldEmail","InformationFieldEmail.html#method-i-form","(form_helper, key, options = {})",""],["form","InformationFieldMultipleSelect","InformationFieldMultipleSelect.html#method-i-form","(form_helper, key, options = { :data => [], :required => false, :value => '' })",""],["form","InformationFieldSingleSelect","InformationFieldSingleSelect.html#method-i-form","(form_helper, key, options = { :data => [], :required => false, :value => '' })",""],["form","InformationFieldText","InformationFieldText.html#method-i-form","(form_helper, key, options = { })",""],["get_partial","InformationTypeHelper","InformationTypeHelper.html#method-c-get_partial","(information_field_type)",""],["get_value","InformationFieldDate","InformationFieldDate.html#method-i-get_value","(value)",""],["get_value","InformationFieldEmail","InformationFieldEmail.html#method-i-get_value","(value)",""],["get_value","InformationFieldMultipleSelect","InformationFieldMultipleSelect.html#method-i-get_value","(value)",""],["get_value","InformationFieldSingleSelect","InformationFieldSingleSelect.html#method-i-get_value","(value)",""],["get_value","InformationFieldText","InformationFieldText.html#method-i-get_value","(value)",""],["import","CsvImportController","CsvImportController.html#method-i-import","()",""],["included","Scoped","Scoped.html#method-c-included","(base)",""],["index","HomeController","HomeController.html#method-i-index","()",""],["information","CsvImportController","CsvImportController.html#method-i-information","(key,value)",""],["information_field_types","InformationTypeHelper","InformationTypeHelper.html#method-i-information_field_types","()",""],["information_type","Information","Information.html#method-i-information_type","()","<p>Returns the InformationType of this Information without the\nInformationTypeDecorator.\n"],["information_type_data_form","AjaxController","AjaxController.html#method-i-information_type_data_form","()",""],["information_type_option_form","AjaxController","AjaxController.html#method-i-information_type_option_form","()",""],["information_types","ActorType","ActorType.html#method-i-information_types","()","<p>Returns list with all InformationType objects of this Actor type without\nthe decorator.\n"],["information_types","InformationTypeHelper","InformationTypeHelper.html#method-i-information_types","()",""],["information_types_for_actor_type","ActorController","ActorController.html#method-i-information_types_for_actor_type","()",""],["inherit_scope_from","Scoped::ClassMethods","Scoped/ClassMethods.html#method-i-inherit_scope_from","(parent)",""],["invitation","DeviseMailer","DeviseMailer.html#method-i-invitation","(record, opts={})",""],["invite","InvitationController","InvitationController.html#method-i-invite","()",""],["is_admin?","Login","Login.html#method-i-is_admin-3F","()",""],["is_user?","Login","Login.html#method-i-is_user-3F","()",""],["key","Relationship","Relationship.html#method-i-key","()",""],["list","ActorController","ActorController.html#method-i-list","()","<p>Gets all Actor objects of the current logged in User hashed by their\nActorType. If the current Login …\n"],["list","ActorTypeController","ActorTypeController.html#method-i-list","()","<p>Gets all ActorType objects. If there are none, return an empty array.\n"],["list","InformationTypeController","InformationTypeController.html#method-i-list","()","<p>Gets all InformationType objects. If there are none, return an empty array.\n"],["list","RelationshipTypeController","RelationshipTypeController.html#method-i-list","()",""],["list","ScopesController","ScopesController.html#method-i-list","()",""],["list_account_types","ScopesHelper","ScopesHelper.html#method-i-list_account_types","()",""],["list_actor_types","ActorTypeHelper","ActorTypeHelper.html#method-i-list_actor_types","()",""],["list_csv_files","CsvImportController","CsvImportController.html#method-i-list_csv_files","()","<p>Lists all uploaded CsvFiles.\n"],["list_elements_proper","Scope","Scope.html#method-i-list_elements_proper","()","<p>Elements of “list” must be either :Self, :Unauthorized or an account type.\n"],["list_invited","InvitationController","InvitationController.html#method-i-list_invited","()",""],["list_scope_types","ScopesHelper","ScopesHelper.html#method-i-list_scope_types","()",""],["list_scopes","ActorHelper","ActorHelper.html#method-i-list_scopes","()",""],["list_uninvited","InvitationController","InvitationController.html#method-i-list_uninvited","()",""],["method_missing","InformationTypeDecorator","InformationTypeDecorator.html#method-i-method_missing","(method, *args)","<p>Directs all missing methods forward to the InformationType which is the\nobject that’s being decorated. …\n"],["name","Relationship","Relationship.html#method-i-name","()",""],["new","Actor","Actor.html#method-c-new","()",""],["new","ActorController","ActorController.html#method-i-new","()",""],["new","ActorTypeController","ActorTypeController.html#method-i-new","()",""],["new","CsvImport::CsvFile","CsvImport/CsvFile.html#method-c-new","()",""],["new","Information","Information.html#method-c-new","()",""],["new","RegistrationsController","RegistrationsController.html#method-i-new","()",""],["new","Relationship","Relationship.html#method-c-new","()",""],["new","RelationshipController","RelationshipController.html#method-i-new","()",""],["new","ScopesController","ScopesController.html#method-i-new","()",""],["new_csv_file","CsvImportController","CsvImportController.html#method-i-new_csv_file","()",""],["new_import","CsvImportController","CsvImportController.html#method-i-new_import","()","<p>Displays the form to create a new import.\n"],["parse_data","InformationTypeHelper","InformationTypeHelper.html#method-c-parse_data","(data, information_field_type)",""],["password_match?","User","User.html#method-i-password_match-3F","()",""],["password_required?","User","User.html#method-i-password_required-3F","()",""],["predefined_questions","AjaxController","AjaxController.html#method-i-predefined_questions","()",""],["referenced_actor","AjaxController","AjaxController.html#method-i-referenced_actor","()",""],["relationship_types","RelationshipHelper","RelationshipHelper.html#method-i-relationship_types","()",""],["remove_csv_file","CsvImport::CsvFile","CsvImport/CsvFile.html#method-i-remove_csv_file","()",""],["required?","Information","Information.html#method-i-required-3F","()",""],["reset_all","ApplicationController","ApplicationController.html#method-i-reset_all","()",""],["scope_array","ScopesHelper","ScopesHelper.html#method-i-scope_array","(array, viewer)","<p>Sorts out invisible elements of an array.\n"],["search","ActorController","ActorController.html#method-i-search","()","<p>Search for Actor objects that match the search query and display them.\n"],["searchable?","Information","Information.html#method-i-searchable-3F","()",""],["send_invitation","Login","Login.html#method-i-send_invitation","()","<p>Resets reset password token and send reset password instructions by email\n"],["set_locale","ApplicationController","ApplicationController.html#method-i-set_locale","()",""],["set_scope","Scoped","Scoped.html#method-i-set_scope","(child)",""],["set_value","InformationFieldDate","InformationFieldDate.html#method-i-set_value","(value)",""],["set_value","InformationFieldEmail","InformationFieldEmail.html#method-i-set_value","(value)",""],["set_value","InformationFieldMultipleSelect","InformationFieldMultipleSelect.html#method-i-set_value","(value)",""],["set_value","InformationFieldSingleSelect","InformationFieldSingleSelect.html#method-i-set_value","(value)",""],["set_value","InformationFieldText","InformationFieldText.html#method-i-set_value","(value)",""],["show","ActorController","ActorController.html#method-i-show","()",""],["show","ActorTypeController","ActorTypeController.html#method-i-show","()",""],["show","InformationTypeController","InformationTypeController.html#method-i-show","()","<p>Find InformationType with given id.\n"],["show","RelationshipTypeController","RelationshipTypeController.html#method-i-show","()",""],["to_s","Actor","Actor.html#method-i-to_s","()",""],["to_s","ActorType","ActorType.html#method-i-to_s","()",""],["to_s","BlacklistScope","BlacklistScope.html#method-i-to_s","()",""],["to_s","InformationFieldDate","InformationFieldDate.html#method-i-to_s","(value)",""],["to_s","InformationFieldEmail","InformationFieldEmail.html#method-i-to_s","(value)",""],["to_s","InformationFieldMultipleSelect","InformationFieldMultipleSelect.html#method-i-to_s","(value)",""],["to_s","InformationFieldSingleSelect","InformationFieldSingleSelect.html#method-i-to_s","(value)",""],["to_s","InformationFieldText","InformationFieldText.html#method-i-to_s","(value)",""],["to_s","Relationship","Relationship.html#method-i-to_s","()",""],["to_s","RelationshipType","RelationshipType.html#method-i-to_s","()",""],["to_s","WhitelistScope","WhitelistScope.html#method-i-to_s","()",""],["update","ActorController","ActorController.html#method-i-update","()",""],["update","ActorTypeController","ActorTypeController.html#method-i-update","()",""],["update","InformationTypeController","InformationTypeController.html#method-i-update","()",""],["update","RegistrationsController","RegistrationsController.html#method-i-update","()",""],["update","RelationshipController","RelationshipController.html#method-i-update","()",""],["update","RelationshipTypeController","RelationshipTypeController.html#method-i-update","()",""],["update","ScopesController","ScopesController.html#method-i-update","()",""],["update_corresponding_actors","ActorType","ActorType.html#method-i-update_corresponding_actors","()","<p>Saves each Actor that uses this ActorType to activate update methods of\nActor (e.g. before_save).\n"],["update_search_field","Actor","Actor.html#method-i-update_search_field","()",""],["update_to_string_field","Actor","Actor.html#method-i-update_to_string_field","()",""],["upload_csv_file","CsvImportController","CsvImportController.html#method-i-upload_csv_file","()",""],["user_type","Admin","Admin.html#method-i-user_type","()",""],["user_type","User","User.html#method-i-user_type","()",""],["value","Information","Information.html#method-i-value","()",""],["value=","Information","Information.html#method-i-value-3D","(value)",""],["value_to_s","Information","Information.html#method-i-value_to_s","()",""],["visible?","BlacklistScope","BlacklistScope.html#method-i-visible-3F","(viewer, viewed)","<p>Returns true if viewed is visible to viewer, false otherwise. If viewer\n(Login or symbol) is in list …\n"],["visible?","Scoped","Scoped.html#method-i-visible-3F","(viewer)",""],["visible?","WhitelistScope","WhitelistScope.html#method-i-visible-3F","(viewer, viewed)","<p>Returns true if viewed is visible to viewer, false otherwise. If viewer\n(Login or symbol) is in list …\n"],["AUTHORS","","AUTHORS_rdoc.html","","<p># Authors\n<p>The following people have been involved in the creation of this project:\n<p>Name      |  Rolle  …\n"],["Gemfile","","Gemfile.html","","<p>source ‘rubygems.org’\n<p>gem ‘rails’, ‘3.2.12’ gem ‘mongoid’, ‘~&gt; 3.0.0’ gem ‘devise’ gem\n‘devise-async’ …\n"],["INSTALL","","INSTALL_rdoc.html","","<p># Overview\n<p>The installation consists of setting up the following components:\n<p>Packages / Dependencies\n"],["LICENSE","","LICENSE_rdoc.html","","<p># License The software is licensed under the GNU GPL v3.0. See\nwww.gnu.org/licenses/gpl-3.0 for more …\n"],["README","","README_rdoc.html","","<p># Welcome\n<p>This is a Ruby on Rails application based on a MongoDB database.\n<p>Its purpose is to provide …\n"],["Rakefile","","Rakefile.html","","<p>#!/usr/bin/env rake # Add your own tasks in files placed in lib/tasks\nending in .rake, # for example …\n"],["robots","","public/robots_txt.html","","<p>See www.robotstxt.org/wc/norobots.html for documentation on how to use the\nrobots.txt file\n<p>To ban all …\n"]]}}