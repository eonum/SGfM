<% @page_title = t('relationship.edit.title', :actor => @locals[:relationship].actor) %>
<% @scopes = list_scopes %>


<%= form_for(:relationship, :url => update_relationship_path(@locals[:relationship]), :method => :post, :html => { :class => 'form-horizontal'} ) do |f| %>

  <div class="control-group">
    <%= f.label(:relationship_type, t('relationship.edit.relationship_type'), class: 'control-label') %>
    <div class="controls">
      <%= f.select(:relationship_type, relationship_types.map{ |type| [type.name, type.key] }, { :selected => @locals[:relationship].relationship_type.name, :required => true }) %>
    </div>
  </div>

  <div class="control-group">
    <%= f.label(:reference, t('relationship.edit.relationship_reference'), class: 'control-label') %>
    <div class="controls">
      <%= f.text_field(:reference, { :value => @locals[:relationship].reference, :disabled => true }) %>
    </div>
  </div>

  <div class="control-group">
    <%= f.label(:comment, t('relationship.edit.relationship_comment'), class: 'control-label') %>
    <div class="controls">
      <%= f.text_area(:comment, { :rows => '3', :value => @locals[:relationship].comment }) %>
    </div>
  </div>

  <% active_scope =   @locals[:relationship].scope%>
  <div class="btn-group" data-toggle-name="<%= "relationship[scope]" %>" data-toggle="buttons-radio" >
    <% @scopes.each do |scope| %>
      <% if scope == active_scope %>
        <input type="hidden" name="<%= "relationship[scope]" %>" value="<%= scope.key %>"/>
      <% end %>
      <button type="button" value="<%= scope.key %>" class="btn  <%= 'active' if scope == active_scope %>" ><%=  scope.name %></button>
    <% end %>
  </div>

  <div class="form-actions">
    <%= f.submit(t('form.update'), class: 'btn btn-large btn-primary') %>
  </div>

<% end %>

<script>
  $('document').ready(function() {

    var data = [<%= raw(@locals[:all_actors].map { |a| "{id:'#{a.id}',text:'#{a.to_s}'}" }.join(', ')) %>];
    function format(item) { return item.text; };

    $("#e1").select2({
      minimumInputLength: 3,
      width: '500',
      data:{ results: data },
      formatSelection: format,
      formatResult: format
    });

  });
</script>

<script>
  //Helps to transfer the "state" of a radiobuttons-like button-group to a hidden input field (so it can be POSTed) TODO: put this into an external file.
  $('div.btn-group[data-toggle-name]').each(function () {
    var group = $(this);
    var form = group.parents('form').eq(0);
    var name = group.attr('data-toggle-name');
    var hidden = $('input[name="' + name + '"]', form);
    $('button', group).each(function () {
      $(this).on('click', function () {
        hidden.val($(this).val());
      });
    });
  });
</script>