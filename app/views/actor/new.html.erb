<% @page_title = t('actor.new.title') %>

<%= form_for(:actor, :url => create_actor_path, :method => :post, :html => { :class => 'form-horizontal', :onsubmit => 'on_submit()'}) do |f| %>
  <div class="accordion" id="new-actor">
    <div class="accordion-group">
      <div class="accordion-heading">
        <%= content_tag(:p, t('actor.new.type_title'), :class => 'lead left-margin', :id => 'title-actor-type') %>
      </div>
      <div id="actor-type" class="accordion-body collapse in">
        <div class="accordion-inner">
          <%= render :partial => 'actor/actor_type'%>
          <%= link_to_function(t('actor.new.next_button'), 'transition(\'actor-type\', \'information\')', :type => :btn, :class => 'btn') %>
        </div>
      </div>
    </div>
    <div class="accordion-group">
      <div class="accordion-heading">
        <%= content_tag(:p, t('actor.new.information_title'), :class => 'left-margin', :id => 'title-information') %>
      </div>
      <div id="information" class="accordion-body collapse in">
        <div class="accordion-inner">
          <div id="information-types-form"></div>
          <%= link_to_function(t('actor.new.back_button'), 'transition(\'information\', \'actor-type\', false)', :type => :btn, :class => 'btn') %>
          <%= link_to_function(t('actor.new.next_button'), 'transition("information", "rel0", true)', :type => :btn, :class => 'btn') %>
        </div>
      </div>
    </div>
    <div id="predefined-questions-form"></div>
  </div>
<% end %>

<script>
  function actor_type_selected() {
    var val = $('#actor-type-select option:selected').val();
    SGfM.actor.render_matching_form(<%= raw "\"#{information_types_for_actor_type_path}\"" %>, val);
    SGfM.insert_form(<%= raw("\"#{predefined_questions_path}\"") %>, '#predefined-questions-form', {actor_type: val});
  }

  function transition(old_one, new_one, validation) {
    var ret = validate('#' + old_one);
    if(!validation || !ret) {
      do_transition(old_one, new_one);
    } else {
      hl(ret);
    }
  }

  function do_transition(old_one, new_one) {
    $('#' + old_one).collapse('hide');
    $('#title-' + old_one).removeClass('lead');
    $('#title-' + new_one).addClass('lead');
    $('#' + new_one).collapse('show').goTo();
  }

  function validate(selector) {
    var el = null;
    $(selector).find(':input[required]').each(function(index, element) {
      if(!$(element).val()) {
        console.log(element);
        el = element;
        return false; //abort the loop here
      }
      return true;
    });
    return el;
  }

  function hl(selector){
    $(selector).focus();
  }

  $('document').ready(function() {
    $('#information').collapse();
    var val = $('#actor-type-select option:selected').val();
    SGfM.actor.render_matching_form('<%=information_types_for_actor_type_path%>', val);
    SGfM.insert_form(<%= raw("\"#{predefined_questions_path}\"") %>, '#predefined-questions-form', {actor_type: val});
  })
</script>

<script>
  //Helps to transfer the "state" of a radiobuttons-like button-group to a hidden input field (so it can be POSTed)
  $('div.btn-group[data-toggle-name]').each(function () {
    var group = $(this);
    var form = group.parents('form').eq(0);
    var name = group.attr('data-toggle-name');
    var hidden = $('input[name="' + name + '"]', form);
    $('button', group).each(function () {
      $(this).on('click', function () {
        hidden.val($(this).val());
      });
    });
  });
</script>